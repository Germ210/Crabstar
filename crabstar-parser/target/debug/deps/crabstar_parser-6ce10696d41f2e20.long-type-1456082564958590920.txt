chumsky::combinator::Map<impl chumsky::Parser<'_, _, <_ as SliceInput<'_>>::Slice, _> + Copy, &str, {closure@src\parser.rs:118:12: 118:24}>
RecoverWith<Choice<(Labelled<chumsky::combinator::Map<Then<Padded<impl chumsky::Parser<'_, _, <_ as SliceInput<'_>>::Slice, _> + Clone + '_>, Labelled<chumsky::combinator::Map<Recursive<dyn chumsky::Parser<'_, _, (_, Ast), _>>, (_, Ast), {closure@src\parser.rs:154:16: 154:26}>, &str>, _, Ast, _>, (_, Ast), {closure@src\parser.rs:160:16: 160:26}>, &str>, RecoverWith<Padded<Choice<(Labelled<Choice<(To<Just<&str, _, _>, &str, Ast>, To<Just<&str, _, _>, &str, Ast>)>, &str>, Labelled<Choice<(chumsky::combinator::Map<ToSlice<Then<Then<Repeated<impl chumsky::Parser<'_, _, <_ as chumsky::input::Input<'_>>::Token, _> + Copy, _, _, _>, Just<&str, _, _>, (), &str, _>, Repeated<impl chumsky::Parser<'_, _, <_ as chumsky::input::Input<'_>>::Token, _> + Copy, _, _, _>, ((), &str), (), _>, (((), &str), ())>, &str, {closure@src\parser.rs:107:12: 107:21}>, chumsky::combinator::Map<ToSlice<Repeated<impl chumsky::Parser<'_, _, <_ as chumsky::input::Input<'_>>::Token, _> + Copy, _, _, _>, ()>, &str, {closure@src\parser.rs:111:12: 111:21}>)>, &str>, Labelled<chumsky::combinator::Map<impl chumsky::Parser<'_, _, <_ as SliceInput<'_>>::Slice, _> + Copy, &str, {closure@src\parser.rs:118:12: 118:24}>, &str>, Labelled<chumsky::combinator::Map<DelimitedBy<Collect<SeparatedBy<Recursive<dyn chumsky::Parser<'_, _, Ast, _>>, Padded<Just<&str, _, _>>, Ast, &str, _, _>, Ast, Vec<Ast>>, Padded<Just<&str, _, _>>, Padded<Just<&str, _, _>>, &str, &str>, Vec<Ast>, {closure@src\parser.rs:128:12: 128:19}>, &str>)>>, ViaParser<chumsky::combinator::Map<Ignored<Repeated<NoneOf<&str, _, _>, _, _, _>, ()>, (), {closure@src\parser.rs:146:46: 146:49}>>>)>, ViaParser<chumsky::combinator::Map<Ignored<Repeated<NoneOf<&str, _, _>, _, _, _>, ()>, (), {closure@src\parser.rs:165:58: 165:61}>>>
